apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-nginx-config
data:
  default.conf: |
    # NGINX configuration with JSON logging format for better log parsing
    worker_processes 1;
    error_log /var/log/nginx/error.log warn;

    events {
        worker_connections 1024;
    }

    http {
        # Define custom log format in JSON
        log_format json_combined escape=json 
          '{ "time": "$time_iso8601", '
          '"remote_addr": "$remote_addr", '
          '"request": "$request", '
          '"status": "$status", '
          '"body_bytes_sent": "$body_bytes_sent", '
          '"http_referer": "$http_referer", '
          '"http_user_agent": "$http_user_agent" }';

        access_log /var/log/nginx/access.log json_combined;

        server {
          listen 80;
          server_name electrifex.kiran-devops.com;

          # Serve static files from /usr/share/nginx/html
          location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
          }

          # Forward /healthz calls to the backend API
          location /healthz {
            proxy_pass http://fastapi-backend-service:8000;
          }
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend-nginx
  template:
    metadata:
      labels:
        app: frontend-nginx
    spec:
      containers:
      - name: nginx
        image: 864981739210.dkr.ecr.us-east-1.amazonaws.com/frontend:1
        ports:
        - containerPort: 80
        volumeMounts:
        - name: logs
          mountPath: /var/log/nginx
        - name: config-volume
          mountPath: /etc/nginx/conf.d
        env:
        - name: BACKEND_API_URL
          value: "http://fastapi-backend-service:8000"
      volumes:
      - name: logs
        emptyDir: {}
      - name: config-volume
        configMap:
          name: frontend-nginx-config
          items:
          - key: default.conf
            path: default.conf
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-nginx-service
spec:
  type: ClusterIP
  selector:
    app: frontend-nginx
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
